"""empty message

Revision ID: 2cbe9723d3cd
Revises: 04ac58ea38d1
Create Date: 2024-09-27 15:51:51.202378

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2cbe9723d3cd'
down_revision = '04ac58ea38d1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop the foreign key constraint that references the 'character' table
    with op.batch_alter_table('favorite', schema=None) as batch_op:
        batch_op.drop_constraint('favorite_character_id_fkey', type_='foreignkey')

    # Drop the 'character' table after the foreign key constraint is removed
    op.drop_table('character')

    # Create 'people' table with necessary columns
    op.create_table('people',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('birth_year', sa.String(length=50), nullable=True),
        sa.Column('gender', sa.String(length=50), nullable=True),
        sa.Column('species', sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    # Modify 'favorite' table to add 'people_id' column and set the new foreign key constraint
    with op.batch_alter_table('favorite', schema=None) as batch_op:
        batch_op.add_column(sa.Column('people_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'people', ['people_id'], ['id'])
        batch_op.drop_column('character_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Revert 'favorite' table changes by dropping 'people_id' and re-adding 'character_id'
    with op.batch_alter_table('favorite', schema=None) as batch_op:
        batch_op.add_column(sa.Column('character_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('favorite_character_id_fkey', 'character', ['character_id'], ['id'])
        batch_op.drop_column('people_id')

    # Recreate the 'character' table
    op.create_table('character',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column('birth_year', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column('gender', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column('species', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='character_pkey')
    )

    # Drop the 'people' table
    op.drop_table('people')

    # ### end Alembic commands ###
